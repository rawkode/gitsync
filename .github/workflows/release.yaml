# Borrowed from https://raw.githubusercontent.com/sharkdp/bat/master/.github/workflows/CICD.yml
name: release

env:
    MIN_SUPPORTED_RUST_VERSION: "1.75.0"
    CICD_INTERMEDIATES_DIR: "_cicd-intermediates"
    #https://github.com/rust-lang/cargo/issues/10303
    CARGO_NET_GIT_FETCH_WITH_CLI: "true"

on:
    push:
        branches:
            - "main"
        tags:
            - "*"

jobs:
    lint:
        runs-on: ubuntu-20.04
        steps:
            - name: Git checkout
              uses: actions/checkout@v4
            - name: Install rust toolchain (v${{ env.MIN_SUPPORTED_RUST_VERSION }})
              uses: moonrepo/setup-rust@v1
              with:
                  channel: ${{ env.MIN_SUPPORTED_RUST_VERSION }}
                  components: clippy
                  bins: cargo-tarpaulin
            - name: Run clippy (on minimum supported rust version to prevent warnings we can't fix)
              run: cargo clippy --all-targets --all-features -- -D warnings
            - name: Run tests
              run: cargo test --all-targets --all-features
            - name: Run cargo-tarpaulin
              run: cargo tarpaulin --out Xml --all-features

            - name: Upload to codecov.io
              uses: codecov/codecov-action@v1.0.2
              with:
                  token: ${{secrets.CODECOV_TOKEN}}

    build:
        name: ${{ matrix.job.os }} (${{ matrix.job.target }})
        runs-on: ${{ matrix.job.os }}
        strategy:
            fail-fast: false
            matrix:
                job:
                    - { os: ubuntu-20.04, target: x86_64-unknown-linux-gnu }
                    - { os: macos-latest, target: x86_64-apple-darwin }
                    - { os: windows-latest, target: x86_64-pc-windows-gnu }
        steps:
            - name: Checkout source code
              uses: actions/checkout@v4

            - name: Install Rust toolchain
              uses: moonrepo/setup-rust@v1
              with:
                  channel: stable
                  targets: ${{ matrix.job.target }}

            - name: Run tests
              run: cargo test --all-features --target ${{ matrix.job.target }}

    release:
        if: startsWith(github.ref, 'refs/tags/')
        runs-on: ubuntu-20.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Conventional Changelog Action
              id: changelog
              uses: TriPSs/conventional-changelog-action@v3
              with:
                  github-token: ${{ secrets.github_token }}
                  output-file: "false"

            - name: Update Release with Changelog
              uses: softprops/action-gh-release@v1
              with:
                  body: |
                      ${{steps.changelog.outputs.clean_changelog}}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
