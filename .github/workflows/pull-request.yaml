name: pull-request

env:
    MIN_SUPPORTED_RUST_VERSION: "1.75.0"
    #https://github.com/rust-lang/cargo/issues/10303
    CARGO_NET_GIT_FETCH_WITH_CLI: "true"

on:
    pull_request:
        branches:
            - main
        types:
            - opened
            - edited
            - synchronize

jobs:
    lint:
        runs-on: ubuntu-20.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: check-for-cc
              id: check-for-cc
              uses: agenthunt/conventional-commit-checker-action@v1.0.0
              with:
                  # Don't enforce a format for the body, lets rely on the title
                  pr-body-regex: ".*"

            - name: Install stable toolchain
              uses: moonrepo/setup-rust@v1
              with:
                  channel: stable
                  components: clippy,rustfmt

            - name: Run cargo fmt
              run: cargo fmt --all -- --check

            - uses: EmbarkStudios/cargo-deny-action@v1
              with:
                  log-level: warn
                  command: check
                  arguments: --all-features

            - run: cargo clippy --all-targets --all-features -- -D warnings

            - name: Run cargo-tarpaulin
              run: cargo tarpaulin --out Xml --all --exclude-files tests/*

            - name: Upload to codecov.io
              uses: codecov/codecov-action@v1.0.2
              with:
                  token: ${{secrets.CODECOV_TOKEN}}

    test:
        name: ${{ matrix.job.os }} (${{ matrix.job.target }})
        runs-on: ${{ matrix.job.os }}
        strategy:
            fail-fast: false
            matrix:
                job:
                    - { os: ubuntu-20.04, target: x86_64-unknown-linux-gnu }
                    - { os: macos-latest, target: x86_64-apple-darwin }
                    - { os: windows-latest, target: x86_64-pc-windows-gnu }
        steps:
            - name: Checkout source code
              uses: actions/checkout@v4

            - name: Extract crate information
              shell: bash
              run: |
                  echo "PROJECT_NAME=$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml)" >> $GITHUB_ENV
                  echo "PROJECT_VERSION=$(sed -n 's/^version = "\(.*\)"/\1/p' Cargo.toml | head -n1)" >> $GITHUB_ENV
                  echo "PROJECT_MAINTAINER=$(sed -n 's/^authors = \["\(.*\)"\]/\1/p' Cargo.toml)" >> $GITHUB_ENV
                  echo "PROJECT_HOMEPAGE=$(sed -n 's/^homepage = "\(.*\)"/\1/p' Cargo.toml)" >> $GITHUB_ENV

            - name: Install Rust toolchain
              uses: moonrepo/setup-rust@v1
              with:
                  channel: stable
                  targets: ${{ matrix.job.target }}

            - name: Set testing options
              id: test-options
              shell: bash
              run: |
                  # test only library unit tests and binary for arm-type targets
                  unset CARGO_TEST_OPTIONS
                  unset CARGO_TEST_OPTIONS ; case ${{ matrix.job.target }} in arm-* | aarch64-*) CARGO_TEST_OPTIONS="--lib --bin ${PROJECT_NAME}" ;; esac;
                  echo ::set-output name=CARGO_TEST_OPTIONS::${CARGO_TEST_OPTIONS}

            - name: Run tests
              run: cargo test --target ${{ matrix.job.target }} ${{ steps.test-options.outputs.CARGO_TEST_OPTIONS}}
              continue-on-error: true
